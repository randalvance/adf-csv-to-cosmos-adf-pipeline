{
	"name": "DataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CsvFile",
						"type": "DatasetReference"
					},
					"name": "Blob"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CosmosDB",
						"type": "DatasetReference"
					},
					"name": "CosmosDB"
				},
				{
					"dataset": {
						"referenceName": "CosmosDB",
						"type": "DatasetReference"
					},
					"name": "CosmosDBErrors"
				}
			],
			"transformations": [
				{
					"name": "Validate"
				},
				{
					"name": "SeparateErrorRows"
				},
				{
					"name": "AllowUpsert1"
				},
				{
					"name": "AllowUpsert2"
				},
				{
					"name": "AddImportIdentifier"
				}
			],
			"script": "parameters{\n\tpipelineRunId as string\n}\nsource(output(\n\t\tseq as string,\n\t\tfirst as string,\n\t\tlast as string,\n\t\temail as string,\n\t\tgender as string,\n\t\tphone as string,\n\t\tpostal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Blob\nAddImportIdentifier assert(expectTrue(!isNull(email), false, 'assertEmailRequired', null, 'Email is required.'),\n\texpectTrue(!isNull(gender), false, 'assertGenderRequired', null, 'Gender is required.'),\n\texpectTrue(!isNull(first), false, 'assertFirstName', null, 'First name is required')) ~> Validate\nValidate split(!isError(),\n\tdisjoint: false) ~> SeparateErrorRows@(CosmosDB, CosmosDBErrors)\nSeparateErrorRows@CosmosDB alterRow(upsertIf(true())) ~> AllowUpsert1\nSeparateErrorRows@CosmosDBErrors alterRow(upsertIf(true())) ~> AllowUpsert2\nBlob derive(ImportIdentifier = $pipelineRunId) ~> AddImportIdentifier\nAllowUpsert1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tformat: 'document',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CosmosDB\nAllowUpsert2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tformat: 'document',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CosmosDBErrors"
		}
	}
}